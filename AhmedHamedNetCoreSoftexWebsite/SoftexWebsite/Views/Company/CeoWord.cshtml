@{

    ViewData["Title"] = localizer["CEO"];
}


<div id="CEOSection">
    <div id="content" class="no-padding" role="main">
    <div class="page-header parallax dark larger2x larger-desc" data-bgattach="/images/backgrounds/index9/bg1.webp" data-0="background-position:50% 0px;" data-500="background-position:50% -100%" style="background-image: url(&quot;images/backgrounds/index9/bg1.webp&quot;);">
        <div class="container">
            <div class="row" style="display: flex;">
                <div class="col-md-6">
                        <h1>{{Details.shortDescription}}</h1>

                </div><!-- End .col-md-6 -->
                <div class="col-md-6">
                    <ol class="breadcrumb">
                            <li><a href="/">@localizer["home"]</a></li>
                            <li class="active">{{Details.shortDescription}}</li>
                    </ol>
                </div><!-- End .col-md-6 -->
            </div><!-- End .row -->
        </div><!-- End .container -->
    </div><!-- End .page-header -->

    <div class="container pb60">

        <div class="col-md-12">
                <div class="row" >
                    <div class="testimonial mb0" v-for="item in Details.webSections">
                        <figure v-for="image in item.images">
                            <img :src="image.imageLinkMobile" alt="Maged A. Reda">
                        </figure>
                        <div class="testimonial-content">
                            <p class="lead" v-html="item.details">
                           
                            </p>
                        
                        </div>
                </div>
            </div>



        </div><!-- End .col-md-9 -->


    </div>
</div>
</div>

<script>
    const CEO = Vue.createApp({
        data() {
            return {
                Details: [],
            };
        },
        created() {
            this.loadApi();
        },
        methods: {
            async loadApi() {
                try {
                    const response = await axios.get("/TreeData/GetWebsectionsWithImages?TreeId=94");
                    this.Details = response.data[0];
                } catch (e) {
                    console.error(e);
                }
            },
            updateSelectedImage(image) {
                var selectedImage = "";
                if (this.screenSize <= 767) {
                    selectedImage = image.imageLinkMobile;
                } else if (this.screenSize <= 1024) {
                    selectedImage = image.imageLinkTablet;
                } else {
                    selectedImage = image.imageLink;
                }
                return selectedImage;
            },
        },
    });
    CEO.mount('#CEOSection');

</script> 